function CreateTemplates(PartList,Conditions_Names,FreqNames,Channels,ExcelDirectory,ExcelFiles)
%-------------------------------------------------------------------------%
% EXCEL TEMPLATES CREATION
%-------------------------------------------------------------------------%
% This function creates new excel templates to be used in the resting-EEG
% automated analyses software which calls this function.
% Usage:
%    >> CreateTemplates(PartList,Conditions_Names,FreqNames,Channels,ConnectMetrics,ExcelDirectory);
%
% Inputs:
%   PartList         = Cell array containing list of subjects' numbers
%   Conditions_Names = Names of the conditions (cell array)
%   FreqNames        = Names of frequency bands (cell array)
%   Channels         = Number of EEG channels (double)
%   ExcelDirectory   = Path where to export the templates
%   ExcelFiles       = List of existing excel files (obtained with dir
%                     function)


% Author: Corentin Wicht, LCNS, 2018
% corentin.wicht@unifr.ch

% This work is licensed under a Creative Commons Attribution-NonCommercial
% 4.0 International License (CC BY-NC)

%% MISSING TEMPLATES

% List of all templates
TemplatesList={'AsleepAwakeTrials','AreaAmplitude','GPS','InterpChannels',...
    'RejectedComponents','MicroStates'};

MissingTemplate={};
for k=1:length(TemplatesList)
    if sum(contains({ExcelFiles.name},TemplatesList{k})) < 1
        MissingTemplate=[MissingTemplate TemplatesList(k)];
    end
end
%% HEADERS

HeadersGPS=cell(1,length(Channels));
for k=1:length(Channels)
   HeadersGPS{k}= sprintf('TempVar%d',Channels(k));
end

% FILLERS
Filler1=[PartList repmat({NaN},[length(PartList),2*length(Conditions_Names)])];
Filler2=[PartList repmat({NaN},[length(PartList),2*length(Conditions_Names)])...
    repmat({''},[length(PartList),2*length(Conditions_Names)])];
Filler3=[PartList repmat({NaN},[length(PartList),length(Channels)])];

%%  Generating the templates
% Generating empty tables structures 

% AsleepAwakeTrials
Asleep = [repmat({'Asleep'},1,length(Conditions_Names)) ...
    repmat({'Awake'},1,length(Conditions_Names))];
HeadersSleep = repmat(Conditions_Names',1,2);
HeadersSleep = cellfun(@(x,y) [x y],HeadersSleep,Asleep,'UniformOutput',false);

% Channel areas
Areas = [repmat({'Max'},1,length(Conditions_Names)) repmat({'Min'},1,length(Conditions_Names)) ...
    repmat({'MaxClust'},1,length(Conditions_Names)) repmat({'MinClust'},1,length(Conditions_Names))];

% HeadersArea
HeadersArea = repmat(Conditions_Names',1,4);
HeadersArea = cellfun(@(x,y) [x '_' y],HeadersArea, Areas,'UniformOutput',false);

% For all frequency bands 
for m=1:length(FreqNames)

    % Generating the tables
    for n=1:length(Conditions_Names)
        % Global Power Spectra templates
       GPS.(FreqNames{m}).(Conditions_Names{n})=cell2table(Filler3,'VariableNames',[{'Participants'} HeadersGPS]); 
    end
    % Electrode amplitude templates
    AreaTab.(FreqNames{m})=cell2table(Filler2,'VariableNames',[{'Participants'} HeadersArea]);
end

% Asleep/Awake trials template 
SleepTab=cell2table(Filler1,'VariableNames',[{'Participants'} HeadersSleep]);
% Interpolated channels table
InterpChan=cell2table(PartList,'VariableNames',{'Participants'});
% Rejected components (ICA) table
RejectedComponents=cell2table(PartList,'VariableNames',{'Participants'});
%% EXPORT EXCEL

% Count number of templates created
NumTemp=0;

% Removes warning from adding new worksheets
warning('off','MATLAB:xlswrite:AddSheet');
% RemoveSheet123 is a function that removes the default Excel sheets
% automatically generated by writetable.

% Write MISSING tables in corresponding excel files
if ismember('AsleepAwakeTrials',MissingTemplate)
    writetable(SleepTab,[ExcelDirectory 'AsleepAwakeTrials.xlsx']);
    NumTemp=NumTemp+1;
end

for m=1:length(Conditions_Names)
    
    if ismember('InterpChannels',MissingTemplate)
        % Interpolated channels table
        writetable(InterpChan,[ExcelDirectory ...
            ['InterpChannels' Conditions_Names{m} '.xlsx']]);
        NumTemp=NumTemp+1;
    end
    
    if ismember('RejectedComponents',MissingTemplate)
        % Rejected components (ICA) table
        writetable(RejectedComponents,[ExcelDirectory ...
            ['RejectedComponents' Conditions_Names{m} '.xlsx']]);
        NumTemp=NumTemp+1;
    end
end

for m=1:length(FreqNames)
    
    if ismember('AreaAmplitude',MissingTemplate)
        % Area table
        writetable(AreaTab.(FreqNames{m}),[ExcelDirectory ['AreaAmplitude' FreqNames{m} '.xlsx']]);
        NumTemp=NumTemp+1;
    end

    
    % GPS tables
    for n=1:length(Conditions_Names)
        if ismember('GPS',MissingTemplate)
            % Temporary sheet name
            TempSheetsName = [FreqNames{m} '_' lower(Conditions_Names{n})];
            
            % sheets name longer than or equal to 31 characters will crash
            if length(TempSheetsName) >= 31
                TempSheetsName = TempSheetsName(1:30);
            end
            writetable(GPS.(FreqNames{m}).(Conditions_Names{n}),[ExcelDirectory ...
                ['GPS_' FreqNames{m} '.xlsx']],'Sheet',TempSheetsName);
%             RemoveSheet123([ExcelDirectory ['GPS_' FreqNames{m} '.xlsx']])
            NumTemp=NumTemp+1;
        end
    end
end

% % MicroStates table
% writetable(MicroStates,[ExcelDirectory 'MicroStates.xlsx'],'Sheet','Data');

% Return message indicating the number of templates that were created
fprintf(['%d new template(s) has/have been generated in the following folder:'...
    newline '%s' newline],NumTemp,ExcelDirectory);
end